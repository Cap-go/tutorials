---
import Blog from '@/components/Blog.astro'
import Layout from '@/layouts/Layout.astro'
import * as m from '@/paraglide/messages'
import type { CollectionEntry } from 'astro:content'

const { allPosts } = Astro.props as { allPosts: CollectionEntry<'blog'>[] }

const config = Astro.locals.runtimeConfig
const content: { title?: string; description?: string; image?: string; author?: string; ldJSON?: Object; keywords?: string } = {}

const posts = allPosts.sort((a, b) => (new Date(a.data.created_at) > new Date(b.data.created_at) ? -1 : 1))

if (Astro.locals.runtimeConfig.public.blog_title) content['title'] = Astro.locals.runtimeConfig.public.blog_title
if (Astro.locals.runtimeConfig.public.blog_keywords) content['keywords'] = Astro.locals.runtimeConfig.public.blog_keywords
if (Astro.locals.runtimeConfig.public.blog_description) content['description'] = Astro.locals.runtimeConfig.public.blog_description
---

<Layout {content}>
  <div class="flex w-full flex-col items-center py-8">
    <div class="relative w-full max-w-7xl px-8 sm:px-10 lg:px-12">
      <h1 class="text-3xl leading-tight font-bold text-white sm:text-4xl lg:text-5xl">{m.latest_from_the_blog({}, { locale: Astro.locals.locale })}</h1>
      <h2 class="mt-2 text-base leading-relaxed text-gray-50">
        {config.public.blog_description}
      </h2>
      <div class="mt-8 grid w-full grid-cols-1 gap-2 md:grid-cols-2 lg:grid-cols-3">
        {posts.map((j, i) => <Blog link={j.data.slug} title={j.data.title} date={j.data.created_at} loading={i < 3 ? 'eager' : 'lazy'} />)}
      </div>
    </div>
  </div>
</Layout>
